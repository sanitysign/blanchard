{"version":3,"sources":["webpack://11/./src/scripts/formMaskValidate.js"],"names":["formMaskValidate","IMask","JustValidate","form","document","querySelector","inputFrom","inputTo","inputPhone","inputName","rangeOptions","mask","Number","min","max","thousandsSeparator","phoneMask","formOptions","rules","name","required","minLength","function","value","match","phone","unmaskedValue","length","messages","tooltip","selectorWrap","fadeOutTime","submitHandler","url","method","body","action","FormData","slice","fetch","JSON","stringify","Object","fromEntries","headers","then","response","console","log","reset","classList","add","resetBorders","input","remove","addEventListener","window"],"mappings":"yFAAO,SAASA,EAAiBC,EAAOC,GACtC,IAAMC,EAAOC,SAASC,cAAc,kBAC9BC,EAAYF,SAASC,cAAc,mCACnCE,EAAUH,SAASC,cAAc,iCACjCG,EAAaJ,SAASC,cAAc,iCACpCI,EAAYL,SAASC,cAAc,gCAEnCK,EAAe,CACnBC,KAAMC,OACNC,IAAK,GACLC,IAAK,KACLC,mBAAoB,KAKhBC,GAFgBf,EAAMK,EAAWI,GACnBT,EAAMM,EAASG,GACjBT,EAAMO,EAAY,CAClCG,KAAM,sBAGFM,EAAc,CAClBC,MAAO,CACLC,KAAM,CACJC,UAAU,EACVC,UAAW,EACXC,SAAU,SAACH,EAAMI,GAEf,OAAOA,EAAMC,MADG,kCAIpBC,MAAO,CACLL,UAAU,EACVE,SAAU,SAACH,EAAMI,GAEf,GAAIP,EAAUU,cACZ,OAA0C,KAAnCV,EAAUU,cAAcC,UAKvCC,SAAU,CACRT,KAAM,CACJC,SAAU,kCACVC,UAAW,qCACXC,SAAU,oCAEZG,MAAO,CACLL,SAAU,kCACVE,SAAU,yBAGdO,QAAS,CACPC,aAAc,6BACdC,YAAa,KAEfC,cAAe,WASjB,IAAsBC,EAAKC,EAAQC,EAAbF,EAPL9B,EAAKiC,OAOKF,EAPG/B,EAAK+B,OAOAC,EAPQ,IAAIE,SAASlC,GASlD,QAAA8B,EAAIK,OAAO,GAKfC,MAAMN,EAAK,CACTC,OAAQA,EACRC,KAAMK,KAAKC,UAAUC,OAAOC,YAAYR,IACxCS,QAAS,CACP,eAAgB,qCAEjBC,MAAK,SAAAC,GAAQ,OAAIC,QAAQC,IAAIF,MAV9BC,QAAQC,IAAR,6CATA7C,EAAK8C,QACLzC,EAAW0C,UAAUC,IAArB,WACA1C,EAAUyC,UAAUC,IAApB,aAuBJ,SAASC,EAAaC,GACpBA,EAAMH,UAAUI,OAAhB,WAJF9C,EAAW+C,iBAAX,SAAqC,kBAAMH,EAAa5C,MACxDC,EAAU8C,iBAAV,SAAoC,kBAAMH,EAAa3C,MAMvD,IAAI+C,OAAOtD,aAAa,iBAAkBe,G","file":"scripts/674.js","sourcesContent":["export function formMaskValidate(IMask, JustValidate) {\r\n  const form = document.querySelector('.contacts-form')\r\n  const inputFrom = document.querySelector('.range__form [name=\"inputFrom\"]')\r\n  const inputTo = document.querySelector('.range__form [name=\"inputTo\"]')\r\n  const inputPhone = document.querySelector('.contacts-form [name=\"Phone\"]')\r\n  const inputName = document.querySelector('.contacts-form [name=\"Name\"]')\r\n\r\n  const rangeOptions = {\r\n    mask: Number,\r\n    min: 50,\r\n    max: 25000,\r\n    thousandsSeparator: ' '\r\n  }\r\n  \r\n  const inputFromMask = IMask(inputFrom, rangeOptions)\r\n  const inputToMask = IMask(inputTo, rangeOptions)\r\n  const phoneMask = IMask(inputPhone, {\r\n    mask: '+7 000 000-00-00'\r\n  })\r\n  \r\n  const formOptions = {\r\n    rules: {\r\n      name: {\r\n        required: true,\r\n        minLength: 3,\r\n        function: (name, value) => {\r\n          const letters = /^[a-z, а-я, A-Z, А-Я, \" \"]+$/\r\n          return value.match(letters)\r\n        },\r\n      },\r\n      phone: {\r\n        required: true,\r\n        function: (name, value) => {\r\n  \r\n          if (phoneMask.unmaskedValue) {\r\n            return phoneMask.unmaskedValue.length === 10\r\n          }\r\n        },\r\n      },\r\n    },\r\n    messages: {\r\n      name: {\r\n        required: 'Поле обязательно для заполнения',\r\n        minLength: 'Минимальная длина имени: 3 символа',\r\n        function: 'Имя может содержать только буквы'\r\n      },\r\n      phone: {\r\n        required: 'Поле обязательно для заполнения',\r\n        function: 'Введите полный номер'\r\n      },\r\n    },\r\n    tooltip: {\r\n      selectorWrap: '.contacts-form__input-wrap',\r\n      fadeOutTime: 6000\r\n    },\r\n    submitHandler: () => {\r\n\r\n      handleSubmit(form.action, form.method, new FormData(form))\r\n      form.reset()\r\n      inputPhone.classList.add(`success`)\r\n      inputName.classList.add(`success`)\r\n    }\r\n  }\r\n\r\n  function handleSubmit(url, method, body) {\r\n\r\n    if (url.slice(-3) === `...`) {\r\n      console.log(`Enter your Formspree endpoint in the form`)\r\n      return\r\n    }\r\n\r\n    fetch(url, {\r\n      method: method,\r\n      body: JSON.stringify(Object.fromEntries(body)),\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    }).then(response => console.log(response))\r\n  }\r\n\r\n  inputPhone.addEventListener(`input`, () => resetBorders(inputPhone))\r\n  inputName.addEventListener(`input`, () => resetBorders(inputName))\r\n  \r\n  function resetBorders(input) {\r\n    input.classList.remove(`success`)\r\n  }\r\n\r\n  new window.JustValidate('.contacts-form', formOptions)\r\n}"],"sourceRoot":""}